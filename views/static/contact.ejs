<% layout('./layouts/boilerplate') %>
<div class="container mt-4">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <h1 class="mb-4">Contact Us</h1>
            
            <div class="row">
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body">
                            <h3 class="text-primary mb-3">Get in Touch</h3>
                            <div class="contact-info">
                                <p class="mb-3">
                                    <i class="fas fa-envelope text-primary me-3"></i>
                                    <strong>Email:</strong> support@travelnest.com
                                </p>
                                <p class="mb-3">
                                    <i class="fas fa-phone text-primary me-3"></i>
                                    <strong>Phone:</strong> +1 (555) 123-4567
                                </p>
                                <p class="mb-3">
                                    <i class="fas fa-map-marker-alt text-primary me-3"></i>
                                    <strong>Address:</strong><br>
                                    TravelNest Headquarters<br>
                                    123 Tourism Avenue<br>
                                    Travel City, TC 12345
                                </p>
                                <p class="mb-0">
                                    <i class="fas fa-clock text-primary me-3"></i>
                                    <strong>Hours:</strong> 24/7 Support Available
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body">
                            <h3 class="text-primary mb-3">Quick Support</h3>
                            <div class="d-grid gap-2">
                                <a href="/help" class="btn btn-outline-primary">
                                    <i class="fas fa-question-circle me-2"></i>Help Center
                                </a>
                                <a href="/faq" class="btn btn-outline-primary">
                                    <i class="fas fa-list-alt me-2"></i>Frequently Asked Questions
                                </a>
                                <a href="/booking-help" class="btn btn-outline-primary">
                                    <i class="fas fa-book me-2"></i>Booking Help
                                </a>
                                <a href="/customer-service" class="btn btn-outline-primary">
                                    <i class="fas fa-headset me-2"></i>Customer Service
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card shadow-sm">
                <div class="card-body">
                    <h3 class="text-primary mb-3">Send us a Message</h3>
                    <form action="/contact" method="POST" novalidate class="needs-validation">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" class="form-control" name="name" id="name" required>
                                <div class="invalid-feedback">
                                    Please enter a valid name (2-50 characters, letters only).
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" name="email" id="email" required>
                                <div class="invalid-feedback">
                                    Please provide a valid email address.
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="subject" class="form-label">Subject</label>
                            <input type="text" class="form-control" name="subject" id="subject" required>
                            <div class="invalid-feedback">
                                Please enter a subject (3-100 characters).
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="message" class="form-label">Message</label>
                            <textarea class="form-control" name="message" id="message" rows="5" required></textarea>
                            <div class="invalid-feedback">
                                Please enter a message (10-1000 characters).
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="fas fa-paper-plane me-2" id="submitIcon"></i>
                            <span id="submitText">Send Message</span>
                        </button>
                    </form>
                    
                    <!-- Success/Error Alert -->
                    <div id="alertContainer" class="mt-3" style="display: none;">
                        <div class="alert" id="alertBox" role="alert">
                            <span id="alertMessage"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Contact Form AJAX Script -->
<script>
(function() {
    'use strict';
    
    const contactForm = document.querySelector('form');
    const submitBtn = document.getElementById('submitBtn');
    const submitIcon = document.getElementById('submitIcon');
    const submitText = document.getElementById('submitText');
    const alertContainer = document.getElementById('alertContainer');
    const alertBox = document.getElementById('alertBox');
    const alertMessage = document.getElementById('alertMessage');
    
    // Original button content
    const originalBtnContent = {
        icon: 'fas fa-paper-plane me-2',
        text: 'Send Message'
    };
    
    function showLoading() {
        submitBtn.disabled = true;
        submitIcon.className = 'fas fa-spinner fa-spin me-2';
        submitText.textContent = 'Sending...';
    }
    
    function hideLoading() {
        submitBtn.disabled = false;
        submitIcon.className = originalBtnContent.icon;
        submitText.textContent = originalBtnContent.text;
    }
    
    function showAlert(message, type) {
        alertMessage.textContent = message;
        alertBox.className = `alert alert-${type}`;
        alertContainer.style.display = 'block';
        
        // Auto hide after 5 seconds
        setTimeout(() => {
            alertContainer.style.display = 'none';
        }, 5000);
        
        // Scroll to alert
        alertContainer.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
    
    contactForm.addEventListener('submit', async function(e) {
        e.preventDefault(); // Prevent default form submission
        e.stopPropagation(); // Stop event propagation
        
        // Hide previous alerts
        alertContainer.style.display = 'none';
        
        // Remove any existing validation states
        contactForm.classList.remove('was-validated');
        const inputs = contactForm.querySelectorAll('input, textarea');
        inputs.forEach(input => {
            input.classList.remove('is-valid', 'is-invalid');
        });
        
        // Get form data
        const formData = new FormData(contactForm);
        const data = {
            name: formData.get('name').trim(),
            email: formData.get('email').trim(),
            subject: formData.get('subject').trim(),
            message: formData.get('message').trim()
        };
        
        // DOM and regex-based validation
        let hasErrors = false;
        
        // Name validation - only letters, spaces, and basic punctuation
        const nameRegex = /^[a-zA-Z\s'.-]{2,50}$/;
        const nameField = document.getElementById('name');
        if (!data.name || !nameRegex.test(data.name)) {
            nameField.classList.add('is-invalid');
            hasErrors = true;
        } else {
            nameField.classList.add('is-valid');
        }
        
        // Email validation - comprehensive regex
        const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
        const emailField = document.getElementById('email');
        if (!data.email || !emailRegex.test(data.email)) {
            emailField.classList.add('is-invalid');
            hasErrors = true;
        } else {
            emailField.classList.add('is-valid');
        }
        
        // Subject validation - at least 3 characters, max 100
        const subjectRegex = /^.{3,100}$/;
        const subjectField = document.getElementById('subject');
        if (!data.subject || !subjectRegex.test(data.subject)) {
            subjectField.classList.add('is-invalid');
            hasErrors = true;
        } else {
            subjectField.classList.add('is-valid');
        }
        
        // Message validation - at least 10 characters, max 1000
        const messageRegex = /^[\s\S]{10,1000}$/;
        const messageField = document.getElementById('message');
        if (!data.message || !messageRegex.test(data.message)) {
            messageField.classList.add('is-invalid');
            hasErrors = true;
        } else {
            messageField.classList.add('is-valid');
        }
        
        // Focus on first invalid field
        if (hasErrors) {
            const firstInvalidField = contactForm.querySelector('.is-invalid');
            if (firstInvalidField) {
                firstInvalidField.focus();
                firstInvalidField.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
            return;
        }
        
        showLoading();
        
        try {
            const response = await fetch('/contact', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            });
            
            const result = await response.json();
            
            if (result.success) {
                showAlert(result.message, 'success');
                contactForm.reset(); // Clear the form
                
                // Remove validation classes and reset form state
                const inputs = contactForm.querySelectorAll('input, textarea');
                inputs.forEach(input => {
                    input.classList.remove('is-valid', 'is-invalid');
                });
                contactForm.classList.remove('was-validated');
            } else {
                showAlert(result.error, 'danger');
            }
        } catch (error) {
            console.error('Error sending message:', error);
            showAlert('Network error. Please check your connection and try again.', 'danger');
        } finally {
            hideLoading();
        }
    });
    
    // Bootstrap form validation
    contactForm.classList.add('needs-validation');
    
    // Add real-time validation feedback
    const inputs = contactForm.querySelectorAll('input, textarea');
    inputs.forEach(input => {
        input.addEventListener('blur', function() {
            if (this.checkValidity()) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
        });
        
        input.addEventListener('input', function() {
            if (this.classList.contains('is-invalid') && this.checkValidity()) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            }
        });
    });
    
})();
</script>

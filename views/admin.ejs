<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TravelNest Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    
    <style>
        :root {
            --primary-color: #2563eb;
            --secondary-color: #64748b;
            --success-color: #10b981;
            --warning-color: #f59e0b;
            --danger-color: #ef4444;
            --info-color: #06b6d4;
            --light-bg: #f8fafc;
            --card-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
            --card-shadow-hover: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        body {
            background-color: var(--light-bg);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        .sidebar {
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
            min-height: 100vh;
            width: 280px;
            position: fixed;
            left: 0;
            top: 0;
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .sidebar.collapsed {
            width: 80px;
        }

        .sidebar-header {
            padding: 1.5rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar-header h4 {
            color: white;
            font-weight: 600;
            margin: 0;
        }

        .sidebar-menu {
            padding: 1rem 0;
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 1.5rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }

        .menu-item:hover {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
            border-left-color: var(--primary-color);
        }

        .menu-item.active {
            background-color: rgba(59, 130, 246, 0.1);
            color: white;
            border-left-color: var(--primary-color);
        }

        .menu-item i {
            width: 20px;
            margin-right: 0.75rem;
        }

        .main-content {
            margin-left: 280px;
            transition: all 0.3s ease;
        }

        .main-content.expanded {
            margin-left: 80px;
        }

        .topbar {
            background: white;
            padding: 1rem 2rem;
            box-shadow: var(--card-shadow);
            display: flex;
            justify-content: between;
            align-items: center;
        }

        .toggle-sidebar {
            background: none;
            border: none;
            font-size: 1.2rem;
            color: var(--secondary-color);
            cursor: pointer;
        }

        .dashboard-header {
            padding: 2rem;
            background: white;
            margin-bottom: 2rem;
        }

        .dashboard-header h1 {
            font-size: 2rem;
            font-weight: 700;
            color: #1e293b;
            margin: 0;
        }

        .dashboard-header p {
            color: var(--secondary-color);
            margin: 0.5rem 0 0 0;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: var(--card-shadow);
            transition: all 0.3s ease;
            border-left: 4px solid var(--primary-color);
        }

        .stat-card:hover {
            box-shadow: var(--card-shadow-hover);
            transform: translateY(-2px);
        }

        .stat-card.revenue { border-left-color: var(--success-color); }
        .stat-card.bookings { border-left-color: var(--info-color); }
        .stat-card.users { border-left-color: var(--warning-color); }
        .stat-card.hotels { border-left-color: var(--danger-color); }

        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .stat-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
        }

        .stat-icon.revenue { background: var(--success-color); }
        .stat-icon.bookings { background: var(--info-color); }
        .stat-icon.users { background: var(--warning-color); }
        .stat-icon.hotels { background: var(--danger-color); }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #1e293b;
            margin: 0;
        }

        .stat-label {
            color: var(--secondary-color);
            font-size: 0.875rem;
            margin: 0.25rem 0 0 0;
        }

        .stat-change {
            font-size: 0.75rem;
            font-weight: 500;
            margin-top: 0.5rem;
        }

        .stat-change.positive { color: var(--success-color); }
        .stat-change.negative { color: var(--danger-color); }

        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .chart-card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: var(--card-shadow);
            height: 400px;
            display: flex;
                flex-direction: column;
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            flex-shrink: 0;
        }

        .chart-container {
            flex: 1;
            position: relative;
            min-height: 0;
        }

        .chart-container canvas {
            max-height: 100% !important;
            width: 100% !important;
            height: auto !important;
        }

        /* Ensure charts don't grow beyond container */
        .chart-card .chartjs-render-monitor {
            max-height: 100% !important;
        }

        /* Fix for Chart.js responsive issues */
        .chart-container {
            overflow: hidden;
        }

        .chart-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1e293b;
            margin: 0;
        }

        .table-card {
            background: white;
            border-radius: 12px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
        }

        .table-header {
            padding: 1.5rem;
            border-bottom: 1px solid #e2e8f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1e293b;
            margin: 0;
        }

        .table-responsive {
            max-height: 400px;
            overflow-y: auto;
        }

        .table {
            margin: 0;
        }

        .table th {
            background-color: #f8fafc;
            border: none;
            padding: 1rem;
            font-weight: 600;
            color: #475569;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .table td {
            border: none;
            padding: 1rem;
            vertical-align: middle;
        }

        .table tbody tr {
            border-bottom: 1px solid #f1f5f9;
        }

        .table tbody tr:hover {
            background-color: #f8fafc;
        }

        .badge {
            padding: 0.375rem 0.75rem;
            border-radius: 6px;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .badge-success { background-color: #dcfce7; color: #166534; }
        .badge-warning { background-color: #fef3c7; color: #92400e; }
        .badge-danger { background-color: #fee2e2; color: #991b1b; }
        
        /* Booking count styling */
        .booking-count {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white !important;
            font-weight: 700;
            text-shadow: 0 1px 2px rgba(0,0,0,0.2);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: none;
        }
        
        .booking-count:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            background: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);
        }

        .btn-sm {
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
        }

        .text-truncate {
            max-width: 200px;
        }

        .user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 0.875rem;
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }
            
            .sidebar.show {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0;
            }
            
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }

        .loading {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 200px;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f4f6;
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h4><i class="fas fa-hotel me-2"></i>TravelNest</h4>
        </div>
        <nav class="sidebar-menu">
            <a href="#dashboard" class="menu-item active" data-section="dashboard">
                <i class="fas fa-chart-line"></i>
                <span>Dashboard</span>
            </a>
            <a href="#users" class="menu-item" data-section="users">
                <i class="fas fa-users"></i>
                <span>Users</span>
            </a>
            <a href="#hotels" class="menu-item" data-section="hotels">
                <i class="fas fa-building"></i>
                <span>Hotels</span>
            </a>
            <a href="#bookings" class="menu-item" data-section="bookings">
                <i class="fas fa-calendar-check"></i>
                <span>Bookings</span>
            </a>
            <a href="#analytics" class="menu-item" data-section="analytics">
                <i class="fas fa-chart-bar"></i>
                <span>Analytics</span>
            </a>
            <a href="/listings" class="menu-item">
                <i class="fas fa-external-link-alt"></i>
                <span>View Site</span>
            </a>
            <a href="/logout" class="menu-item">
                <i class="fas fa-sign-out-alt"></i>
                <span>Logout</span>
            </a>
        </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content" id="mainContent">
        <!-- Topbar -->
        <div class="topbar">
            <button class="toggle-sidebar" id="toggleSidebar">
                <i class="fas fa-bars"></i>
            </button>
            <div class="ms-auto">
                <span class="text-muted">Welcome, <%= currentUser.username %></span>
            </div>
        </div>

        <!-- Dashboard Header -->
        <div class="dashboard-header">
            <h1>Admin Dashboard</h1>
            <p>Monitor and manage your TravelNest platform</p>
            </div>

        <!-- Dashboard Section -->
        <div id="dashboard-section" class="content-section">
            <!-- Stats Grid -->
            <div class="stats-grid">
                <div class="stat-card revenue">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value">₹<%= stats.revenue %></p>
                            <p class="stat-label">Total Revenue</p>
        </div>
                        <div class="stat-icon revenue">
                            <i class="fas fa-rupee-sign"></i>
                        </div>
                    </div>
                    <div class="stat-change positive">
                        <i class="fas fa-arrow-up"></i> 12% from last month
                    </div>
                </div>

                <div class="stat-card bookings">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value"><%= stats.bookings %></p>
                            <p class="stat-label">Total Bookings</p>
                        </div>
                        <div class="stat-icon bookings">
                            <i class="fas fa-calendar-check"></i>
                        </div>
                    </div>
                    <div class="stat-change positive">
                        <i class="fas fa-arrow-up"></i> 8% from last month
                    </div>
                </div>

                <div class="stat-card users">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value"><%= stats.users %></p>
                            <p class="stat-label">Total Users</p>
                        </div>
                        <div class="stat-icon users">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                    <div class="stat-change positive">
                        <i class="fas fa-arrow-up"></i> 15% from last month
                    </div>
                </div>

                <div class="stat-card hotels">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value"><%= stats.hotels %></p>
                            <p class="stat-label">Total Hotels</p>
                        </div>
                        <div class="stat-icon hotels">
                            <i class="fas fa-building"></i>
                        </div>
                    </div>
                    <div class="stat-change positive">
                        <i class="fas fa-arrow-up"></i> 5% from last month
                    </div>
                </div>
            </div>

            <!-- Charts and Tables -->
            <div class="content-grid">
                <div class="chart-card">
                    <div class="chart-header">
                        <h3 class="chart-title">Revenue & Bookings Trend</h3>
                    </div>
                    <div class="chart-container">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>

                <div class="table-card">
                    <div class="table-header">
                        <h3 class="table-title">Top Performing Hotels</h3>
                    </div>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Hotel</th>
                                    <th>Revenue</th>
                                    <th>Bookings</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (topHotels && topHotels.length > 0) { %>
                                    <% topHotels.slice(0, 5).forEach(hotel => { %>
                                        <tr>
                                            <td>
                                                <div class="text-truncate" title="<%= hotel.title %>">
                                                    <%= hotel.title %>
                                                </div>
                                                <small class="text-muted"><%= hotel.location %></small>
                                            </td>
                                            <td>₹<%= hotel.revenue.toFixed(2) %></td>
                                            <td><span class="badge badge-success"><%= hotel.bookings %></span></td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="3" class="text-center text-muted">No data available</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Recent Activity -->
            <div class="table-card">
                <div class="table-header">
                    <h3 class="table-title">Recent Bookings</h3>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>User</th>
                                <th>Hotel</th>
                                <th>Amount</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (recentBookings && recentBookings.length > 0) { %>
                                <% recentBookings.forEach(booking => { %>
                                    <tr>
                                        <td><%= new Date(booking.createdAt).toLocaleDateString() %></td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="user-avatar me-2">
                                                    <%= booking.user && booking.user.username ? booking.user.username.charAt(0).toUpperCase() : 'U' %>
                                                </div>
                                                <div>
                                                    <div><%= booking.user && booking.user.username ? booking.user.username : 'Unknown User' %></div>
                                                    <small class="text-muted"><%= booking.user && booking.user.email ? booking.user.email : 'No email' %></small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="text-truncate" title="<%= booking.listing && booking.listing.title ? booking.listing.title : 'Unknown Hotel' %>">
                                                <%= booking.listing && booking.listing.title ? booking.listing.title : 'Unknown Hotel' %>
                                            </div>
                                            <small class="text-muted"><%= booking.listing && booking.listing.location ? booking.listing.location : 'Unknown Location' %></small>
                                        </td>
                                        <td>₹<%= booking.totalAmount %></td>
                                        <td><span class="badge badge-success">Confirmed</span></td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="text-center text-muted">No recent bookings</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Users Section -->
        <div id="users-section" class="content-section" style="display: none;">
            <div class="table-card">
                <div class="table-header">
                    <h3 class="table-title">User Management</h3>
                    <div>
                        <input type="text" id="userSearch" class="form-control form-control-sm me-2" placeholder="Search users..." onkeyup="searchUsers()" style="width: 200px; display: inline-block;">
                        <span class="badge badge-info me-2">Total: <%= stats.users %></span>
                        <span class="badge badge-success">Active: <%= stats.activeUsers %></span>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>User</th>
                                <th>Email</th>
                                <th>Joined</th>
                                <th>Bookings</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (allUsers && allUsers.length > 0) { %>
                                <% allUsers.forEach(user => { %>
                                    <tr data-user-id="<%= user._id %>">
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="user-avatar me-2">
                                                    <%= user.username.charAt(0).toUpperCase() %>
                                                </div>
                                                <div>
                                                    <div><%= user.username %></div>
                                                    <% if (user.username === 'TravelNest') { %>
                                                        <small class="badge badge-warning">Admin</small>
                                                    <% } %>
                                                </div>
                                            </div>
                                        </td>
                                        <td><%= user.email %></td>
                                        <td><%= new Date(user._id.getTimestamp()).toLocaleDateString() %></td>
                                        <td>
                                            <% 
                                                // Calculate user bookings count with proper error handling
                                                let userBookingsCount = 0;
                                                if (allBookings && Array.isArray(allBookings)) {
                                                    userBookingsCount = allBookings.filter(booking => {
                                                        return booking && 
                                                               booking.user && 
                                                               booking.user._id && 
                                                               booking.user._id.toString() === user._id.toString();
                                                    }).length;
                                                }
                                            %>
                                            <span class="badge booking-count"><%= userBookingsCount %></span>
                                        </td>
                                        <td>
                                            <span class="badge badge-success">Active</span>
                                        </td>
                                        <td>
                                            <button class="btn btn-sm btn-outline-primary me-1" onclick="editUser('<%= user._id %>')">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger" onclick="deleteUser('<%= user._id %>')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="text-center text-muted">No users found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Hotels Section -->
        <div id="hotels-section" class="content-section" style="display: none;">
            <div class="table-card">
                <div class="table-header">
                    <h3 class="table-title">Hotel Management</h3>
                    <span class="badge badge-info">Total: <%= stats.hotels %></span>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Hotel</th>
                                <th>Location</th>
                                <th>Owner</th>
                                <th>Price</th>
                                <th>Bookings</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (allListings && allListings.length > 0) { %>
                                <% allListings.forEach(listing => { %>
                                    <tr data-hotel-id="<%= listing._id %>">
                                        <td>
                                            <div class="text-truncate" title="<%= listing.title %>">
                                                <%= listing.title %>
                                            </div>
                                        </td>
                                        <td><%= listing.location %>, <%= listing.country %></td>
                                        <td><%= listing.owner ? listing.owner.username : 'N/A' %></td>
                                        <td>₹<%= listing.price %></td>
                                        <td>
                                            <% 
                                                // Calculate hotel bookings count with proper error handling
                                                let hotelBookingsCount = 0;
                                                if (hotelBookings && typeof hotelBookings === 'object') {
                                                    hotelBookingsCount = hotelBookings[listing._id.toString()] || 0;
                                                } else if (allBookings && Array.isArray(allBookings)) {
                                                    // Fallback: calculate from allBookings if hotelBookings is not available
                                                    hotelBookingsCount = allBookings.filter(booking => {
                                                        return booking && 
                                                               booking.listing && 
                                                               booking.listing._id && 
                                                               booking.listing._id.toString() === listing._id.toString();
                                                    }).length;
                                                }
                                            %>
                                            <span class="badge booking-count"><%= hotelBookingsCount %></span>
                                        </td>
                                        <td>
                                            <button class="btn btn-sm btn-outline-primary me-1" onclick="editHotel('<%= listing._id %>')">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger" onclick="deleteHotel('<%= listing._id %>')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="text-center text-muted">No hotels found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Bookings Section -->
        <div id="bookings-section" class="content-section" style="display: none;">
            <div class="table-card">
                <div class="table-header">
                    <h3 class="table-title">Booking Management</h3>
                    <span class="badge badge-info">Total: <%= stats.bookings %></span>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Booking ID</th>
                                <th>User</th>
                                <th>Hotel</th>
                                <th>Check-in</th>
                                <th>Check-out</th>
                                <th>Guests</th>
                                <th>Amount</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (recentBookings && recentBookings.length > 0) { %>
                                <% recentBookings.forEach(booking => { %>
                                    <tr>
                                        <td><%= booking._id.toString().slice(-8) %></td>
                                        <td><%= booking.user && booking.user.username ? booking.user.username : 'Unknown User' %></td>
                                        <td>
                                            <div class="text-truncate" title="<%= booking.listing && booking.listing.title ? booking.listing.title : 'Unknown Hotel' %>">
                                                <%= booking.listing && booking.listing.title ? booking.listing.title : 'Unknown Hotel' %>
                                            </div>
                                        </td>
                                        <td><%= booking.checkIn %></td>
                                        <td><%= booking.checkOut %></td>
                                        <td><%= booking.guests %></td>
                                        <td>₹<%= booking.totalAmount %></td>
                                        <td><span class="badge badge-success">Confirmed</span></td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" class="text-center text-muted">No bookings found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Analytics Section -->
        <div id="analytics-section" class="content-section" style="display: none;">
            <div class="content-grid">
                <div class="chart-card">
                    <div class="chart-header">
                        <h3 class="chart-title">User Registration Trends</h3>
                    </div>
                    <div class="chart-container">
                        <canvas id="userTrendsChart"></canvas>
                    </div>
                </div>

                <div class="chart-card">
                    <div class="chart-header">
                        <h3 class="chart-title">Monthly Performance</h3>
                    </div>
                    <div class="chart-container">
                        <canvas id="monthlyChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="stats-grid">
        <div class="stat-card">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value"><%= stats.avgBookingValue %></p>
                            <p class="stat-label">Avg. Booking Value</p>
            </div>
                        <div class="stat-icon revenue">
                            <i class="fas fa-calculator"></i>
        </div>
                    </div>
                </div>

        <div class="stat-card">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value"><%= stats.occupancyRate %>%</p>
                            <p class="stat-label">Occupancy Rate</p>
            </div>
                        <div class="stat-icon bookings">
                            <i class="fas fa-bed"></i>
        </div>
                    </div>
                </div>

        <div class="stat-card">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value"><%= stats.avgDuration %></p>
                            <p class="stat-label">Avg. Stay (days)</p>
                            <small class="text-muted">Min: <%= stats.minStay %> | Max: <%= stats.maxStay %></small>
                        </div>
                        <div class="stat-icon users">
                            <i class="fas fa-clock"></i>
            </div>
        </div>
    </div>

        <div class="stat-card">
                    <div class="stat-header">
                        <div>
                            <p class="stat-value"><%= stats.totalNights %></p>
                            <p class="stat-label">Total Nights</p>
                            <small class="text-muted">From <%= stats.validBookings %> bookings</small>
        </div>
                        <div class="stat-icon hotels">
                            <i class="fas fa-moon"></i>
        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Sidebar toggle
        document.getElementById('toggleSidebar').addEventListener('click', function() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('mainContent');
            
            sidebar.classList.toggle('collapsed');
            mainContent.classList.toggle('expanded');
        });


        // Revenue Chart
        function initRevenueChart() {
            const revenueCtx = document.getElementById('revenueChart');
            if (!revenueCtx) {
                console.log('Revenue chart canvas not found');
                return;
            }
            
            const monthlyRevenueData = <%= JSON.stringify(monthlyRevenue || [0,0,0,0,0,0]) %>;
            const monthlyBookingsData = <%= JSON.stringify(monthlyBookings || [0,0,0,0,0,0]) %>;
            
            console.log('Revenue data:', monthlyRevenueData);
            console.log('Bookings data:', monthlyBookingsData);
            
            try {
                return new Chart(revenueCtx.getContext('2d'), {
                type: 'line',
            data: {
                    labels: ['6 months ago', '5 months ago', '4 months ago', '3 months ago', '2 months ago', 'Last month'],
                datasets: [{
                        label: 'Revenue (₹)',
                        data: monthlyRevenueData,
                        borderColor: '#10b981',
                        backgroundColor: 'rgba(16, 185, 129, 0.1)',
                        tension: 0.4,
                        fill: true
                    }, {
                        label: 'Bookings',
                        data: monthlyBookingsData,
                        borderColor: '#3b82f6',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4,
                        fill: true,
                        yAxisID: 'y1'
                }]
            },
            options: {
                responsive: true,
                    maintainAspectRatio: false,
                    interaction: {
                        intersect: false,
                        mode: 'index'
                    },
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    },
                scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Revenue (₹)'
                            },
                            beginAtZero: true
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Bookings'
                            },
                            beginAtZero: true,
                            grid: {
                                drawOnChartArea: false,
                            },
                        }
                }
            }
        });
            } catch (error) {
                console.error('Error creating revenue chart:', error);
            }
        }

        // User Trends Chart
        function initUserTrendsChart() {
            const userTrendsCtx = document.getElementById('userTrendsChart');
            if (!userTrendsCtx) {
                console.log('User trends chart canvas not found');
                return;
            }
            
            const userTrendsData = <%= JSON.stringify(userTrends || [0,0,0,0,0,0]) %>;
            console.log('User trends data:', userTrendsData);
            
            try {
                return new Chart(userTrendsCtx.getContext('2d'), {
            type: 'bar',
            data: {
                    labels: ['6 months ago', '5 months ago', '4 months ago', '3 months ago', '2 months ago', 'Last month'],
                datasets: [{
                        label: 'New Users',
                        data: userTrendsData,
                        backgroundColor: '#f59e0b',
                        borderRadius: 8
                }]
            },
            options: {
                responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    },
                scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
            } catch (error) {
                console.error('Error creating user trends chart:', error);
            }
        }

        // Monthly Performance Chart
        function initMonthlyChart() {
            const monthlyCtx = document.getElementById('monthlyChart');
            if (!monthlyCtx) {
                console.log('Monthly chart canvas not found');
                return;
            }
            
            try {
                return new Chart(monthlyCtx.getContext('2d'), {
                type: 'doughnut',
            data: {
                    labels: ['Revenue', 'Bookings', 'Users', 'Hotels'],
                datasets: [{
                    data: [
                            <%= stats.revenue || 0 %>,
                            <%= stats.bookings || 0 %>,
                            <%= stats.users || 0 %>,
                            <%= stats.hotels || 0 %>
                        ],
                        backgroundColor: [
                            '#10b981',
                            '#3b82f6',
                            '#f59e0b',
                            '#ef4444'
                        ]
                }]
            },
            options: {
                responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    },
                    aspectRatio: 1
                }
            });
            } catch (error) {
                console.error('Error creating monthly chart:', error);
            }
        }

        // Mobile sidebar toggle
        if (window.innerWidth <= 768) {
            document.getElementById('toggleSidebar').addEventListener('click', function() {
                document.getElementById('sidebar').classList.toggle('show');
            });
        }

        // Delete user functionality
        document.querySelectorAll('#users-section .btn-outline-danger').forEach(btn => {
            btn.addEventListener('click', function() {
                const row = this.closest('tr');
                const username = row.querySelector('td:first-child div:first-child').textContent;
                
                if (confirm(`Are you sure you want to delete user "${username}"?`)) {
                    const userId = row.dataset.userId || this.dataset.userId;
                    fetch(`/admin/users/${userId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            row.remove();
                            showNotification('User deleted successfully', 'success');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showNotification('Error deleting user', 'error');
                    });
                }
            });
        });

        // Delete hotel functionality
        document.querySelectorAll('#hotels-section .btn-outline-danger').forEach(btn => {
            btn.addEventListener('click', function() {
                const row = this.closest('tr');
                const hotelName = row.querySelector('td:first-child div').textContent;
                
                if (confirm(`Are you sure you want to delete hotel "${hotelName}"?`)) {
                    const hotelId = row.dataset.hotelId || this.dataset.hotelId;
                    fetch(`/admin/listings/${hotelId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            row.remove();
                            showNotification('Hotel deleted successfully', 'success');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showNotification('Error deleting hotel', 'error');
                    });
                }
            });
        });

        // Export bookings functionality
        function exportBookings() {
            fetch('/admin/export/bookings')
                .then(response => response.json())
                .then(data => {
                    const csvContent = convertToCSV(data);
                    downloadCSV(csvContent, 'bookings-export.csv');
                    showNotification('Bookings exported successfully', 'success');
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error exporting bookings', 'error');
                });
        }

        function convertToCSV(data) {
            if (!data.length) return '';
            
            const headers = Object.keys(data[0]);
            const csvRows = [headers.join(',')];
            
            data.forEach(row => {
                const values = headers.map(header => {
                    const value = row[header];
                    return typeof value === 'string' ? `"${value}"` : value;
                });
                csvRows.push(values.join(','));
            });
            
            return csvRows.join('\n');
        }

        function downloadCSV(content, filename) {
            const blob = new Blob([content], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = filename;
            a.click();
            window.URL.revokeObjectURL(url);
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `alert alert-${type === 'success' ? 'success' : 'danger'} position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                ${message}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
            `;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                if (notification.parentElement) {
                    notification.remove();
                }
            }, 5000);
        }

        // Store chart instances for resizing
        let revenueChartInstance = null;
        let userTrendsChartInstance = null;
        let monthlyChartInstance = null;

        // User Management Functions
        function editUser(userId) {
            // Fetch user data via AJAX
            fetch(`/admin/users/${userId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Populate edit form with user data
                        document.getElementById('editUsername').value = data.user.username;
                        document.getElementById('editEmail').value = data.user.email;
                        document.getElementById('editUserId').value = data.user._id;
                        // Show edit modal
                        $('#editUserModal').modal('show');
                    } else {
                        alert('Error fetching user data: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error fetching user data');
                });
        }

        function updateUser() {
            const userId = document.getElementById('editUserId').value;
            const username = document.getElementById('editUsername').value;
            const email = document.getElementById('editEmail').value;
            
            fetch(`/admin/users/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username, email })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('User updated successfully!');
                    $('#editUserModal').modal('hide');
                    location.reload();
                } else {
                    alert('Error updating user: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating user');
            });
        }

        function deleteUser(userId) {
            if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
                fetch(`/admin/users/${userId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('User deleted successfully!');
                        location.reload();
                    } else {
                        alert('Error deleting user: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting user');
                });
            }
        }

        // Admin Dashboard AJAX Functions
        function refreshAnalytics() {
            const loadingSpinner = document.getElementById('analyticsSpinner');
            loadingSpinner.style.display = 'inline-block';
            
            fetch('/admin/analytics/refresh', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update charts with new data
                    updateCharts(data.analytics);
                    alert('Analytics refreshed successfully!');
                } else {
                    alert('Error refreshing analytics: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error refreshing analytics');
            })
            .finally(() => {
                loadingSpinner.style.display = 'none';
            });
        }

        function searchUsers() {
            const query = document.getElementById('userSearch').value;
            if (query.length < 2) return;
            
            fetch(`/admin/users/search?q=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(data => {
                    updateUserTable(data.users);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function exportBookings() {
            fetch('/admin/export/bookings')
                .then(response => response.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'bookings.csv';
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error exporting bookings');
                });
        }

        function updateUserTable(users) {
            const tableBody = document.querySelector('#users-section tbody');
            if (!tableBody) return;
            
            let html = '';
            users.forEach(user => {
                html += `
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                <div class="avatar me-2">${user.username.charAt(0).toUpperCase()}</div>
                                <div>
                                    <div>${user.username}</div>
                                    <small class="text-muted">ID: ${user._id}</small>
                                </div>
                            </div>
                        </td>
                        <td>${user.email}</td>
                        <td>${new Date(user.createdAt).toLocaleDateString()}</td>
                        <td><span class="badge booking-count">0</span></td>
                        <td><span class="badge badge-success">Active</span></td>
                        <td>
                            <button class="btn btn-sm btn-primary me-1" onclick="editUser('${user._id}')">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="deleteUser('${user._id}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                </tr>
                `;
            });
            tableBody.innerHTML = html;
        }

        function updateCharts(analytics) {
            // Update revenue chart
            if (revenueChartInstance) {
                revenueChartInstance.data.datasets[0].data = analytics.monthlyRevenue;
                revenueChartInstance.update();
            }
            
            // Update user trends chart
            if (userTrendsChartInstance) {
                userTrendsChartInstance.data.datasets[0].data = analytics.userTrends;
                userTrendsChartInstance.update();
            }
            
            // Update monthly chart
            if (monthlyChartInstance) {
                monthlyChartInstance.data.datasets[0].data = analytics.monthlyBookings;
                monthlyChartInstance.update();
            }
        }

        // Hotel Management Functions
        function editHotel(hotelId) {
            console.log('Edit hotel:', hotelId);
            // TODO: Implement edit hotel functionality
            alert('Edit hotel functionality coming soon!');
        }

        function deleteHotel(hotelId) {
            if (confirm('Are you sure you want to delete this hotel? This action cannot be undone.')) {
                fetch(`/admin/listings/${hotelId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Hotel deleted successfully!');
                        location.reload();
                    } else {
                        alert('Error deleting hotel: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting hotel');
                });
            }
        }

        // Initialize charts when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize all charts
            revenueChartInstance = initRevenueChart();
            userTrendsChartInstance = initUserTrendsChart();
            monthlyChartInstance = initMonthlyChart();
            
            // Add export button to bookings section
            const bookingsSection = document.getElementById('bookings-section');
            if (bookingsSection) {
                const tableHeader = bookingsSection.querySelector('.table-header');
                const exportBtn = document.createElement('button');
                exportBtn.className = 'btn btn-success btn-sm';
                exportBtn.innerHTML = '<i class="fas fa-download me-1"></i>Export CSV';
                exportBtn.onclick = exportBookings;
                tableHeader.appendChild(exportBtn);
            }

            // Handle window resize
            window.addEventListener('resize', function() {
                if (revenueChartInstance) revenueChartInstance.resize();
                if (userTrendsChartInstance) userTrendsChartInstance.resize();
                if (monthlyChartInstance) monthlyChartInstance.resize();
            });
        });

        // Reinitialize charts when switching to analytics section
        document.querySelectorAll('.menu-item[data-section]').forEach(item => {
            item.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Remove active class from all menu items
                document.querySelectorAll('.menu-item').forEach(mi => mi.classList.remove('active'));
                
                // Add active class to clicked item
                this.classList.add('active');
                
                // Hide all sections
                document.querySelectorAll('.content-section').forEach(section => {
                    section.style.display = 'none';
                });
                
                // Show selected section
                const sectionId = this.getAttribute('data-section') + '-section';
                document.getElementById(sectionId).style.display = 'block';
                
                // Reinitialize charts if switching to analytics
                if (this.getAttribute('data-section') === 'analytics') {
                    setTimeout(() => {
                        initUserTrendsChart();
                        initMonthlyChart();
                    }, 100);
                }
            });
        });
    </script>
</body>
</html>